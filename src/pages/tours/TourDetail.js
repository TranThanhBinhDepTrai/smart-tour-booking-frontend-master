import React, { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Container, Row, Col, Button, Card, Carousel, Badge } from "react-bootstrap";
import axios from "axios";
import { toast, Toaster } from "react-hot-toast";
import { API_URL } from "../../config";
import { tourService } from "../../services/tourService";
import "./TourDetail.css";
import { FaStar, FaCalendarAlt, FaMapMarkerAlt, FaTag, FaUsers, FaMoneyBillWave, FaFilePdf, FaArrowLeft } from 'react-icons/fa';

const CATEGORY_LABELS = {
  ADVENTURE: 'Phi√™u l∆∞u m·∫°o hi·ªÉm',
  CULTURAL: 'VƒÉn h√≥a',
  HOLIDAY: 'Ngh·ªâ h√®',
  SEASONAL: 'Theo m√πa',
  RELAX: 'Ngh·ªâ d∆∞·ª°ng',
};

const TourDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [tour, setTour] = useState(null);
  const [loading, setLoading] = useState(true);
  const [relatedTours, setRelatedTours] = useState([]);
  const [loadingRelated, setLoadingRelated] = useState(false);
  const [relatedError, setRelatedError] = useState(null);
  const [reviewStats, setReviewStats] = useState(null);
  const [reviewLoading, setReviewLoading] = useState(true);
  const [reviewError, setReviewError] = useState('');

  useEffect(() => {
    setRelatedTours([]);      // Reset danh s√°ch tour li√™n quan
    setRelatedError(null);    // Reset l·ªói
    loadTourDetails();
    loadTourReviews();
  }, [id]);

  const loadTourDetails = async () => {
    try {
      setLoading(true);
      const response = await axios.get(`${API_URL}/tours/${id}`);
      if (response?.data?.data) {
        setTour(response.data.data);
        // Sau khi l·∫•y th√¥ng tin tour, g·ªçi API l·∫•y tour g·ª£i √Ω
        loadRelatedTours(response.data.data.id);
      }
    } catch (error) {
      setTour(null);
      console.error("Error loading tour:", error);
      toast.error("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin tour");
    } finally {
      setLoading(false);
    }
  };

  const loadRelatedTours = async (tourId) => {
    setRelatedTours([]);      // Reset tr∆∞·ªõc khi g·ªçi API
    setRelatedError(null);
    setLoadingRelated(true);
    try {
      const response = await axios.get(`http://localhost:5000/api/tour-recommendations?tour_id=${tourId}`);
      if (
        response &&
        response.data &&
        response.data.related_tours &&
        response.data.related_tours.length > 0
      ) {
        // L·∫•y chi ti·∫øt c·ªßa t·ª´ng tour g·ª£i √Ω
        const tourDetails = await Promise.all(
          response.data.related_tours.map(async (relatedId) => {
            try {
              const tourDetail = await axios.get(`${API_URL}/tours/${relatedId}`);
              console.log('Tour detail for related:', relatedId, tourDetail.data.data);
              return tourDetail.data.data;
            } catch (error) {
              console.error('Error loading related tour', relatedId, error);
              return null;
            }
          })
        );
        const filtered = tourDetails.filter(tour => tour !== null);
        if (filtered.length > 0) {
          setRelatedTours(filtered);
        } else {
          setRelatedError("Kh√¥ng th·ªÉ t·∫£i tour li√™n quan. Vui l√≤ng th·ª≠ l·∫°i sau.");
        }
      } else {
        setRelatedError("Kh√¥ng c√≥ tour li√™n quan");
        setRelatedTours([]);
      }
    } catch (error) {
      setRelatedTours([]); // Khi l·ªói, x√≥a danh s√°ch tour li√™n quan
      setRelatedError("Kh√¥ng th·ªÉ t·∫£i tour li√™n quan. Vui l√≤ng th·ª≠ l·∫°i sau.");
    } finally {
      setLoadingRelated(false);
    }
  };

  const loadTourReviews = async () => {
    setReviewLoading(true);
    setReviewError('');
    try {
      const res = await axios.get(`http://localhost:8080/api/v1/reviews/tour/${id}`);
      setReviewStats(res.data.data);
    } catch (err) {
      setReviewError('Kh√¥ng th·ªÉ t·∫£i ƒë√°nh gi√° tour');
    } finally {
      setReviewLoading(false);
    }
  };

  const formatDate = (dateString) => {
    if (!dateString) return '';
    const date = new Date(dateString);
    return date.toLocaleDateString('vi-VN', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const handleDownloadPDF = async () => {
    try {
      const response = await axios.get(`${API_URL}/tours/${id}/export/pdf`, {
        responseType: 'blob'
      });

      const url = window.URL.createObjectURL(new Blob([response.data]));
      const link = document.createElement('a');
      link.href = url;
      link.setAttribute('download', `tour-${id}.pdf`);
      document.body.appendChild(link);
      link.click();
      link.remove();
      window.URL.revokeObjectURL(url);
      toast.success('T·∫£i PDF th√†nh c√¥ng!');
    } catch (error) {
      console.error('L·ªói khi t·∫£i PDF:', error);
      toast.error('Kh√¥ng th·ªÉ t·∫£i PDF. Vui l√≤ng th·ª≠ l·∫°i sau.');
    }
  };

  const handleBookTour = () => {
    navigate(`/tours/${id}/book`);
  };

  const navigateToTourDetail = (tourId) => {
    navigate(`/tours/${tourId}`);
    // T·∫£i l·∫°i trang ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin tour m·ªõi
    window.location.reload();
  };

  if (loading) {
    return (
      <Container className="mt-4 text-center">
        <div className="spinner-border text-primary" role="status">
          <span className="visually-hidden">ƒêang t·∫£i...</span>
        </div>
      </Container>
    );
  }

  if (!tour) {
    return (
      <Container className="mt-4">
        <div className="alert alert-warning">Kh√¥ng t√¨m th·∫•y th√¥ng tin tour</div>
      </Container>
    );
  }

  return (
    <Container className="mt-4 tour-detail">
      <Toaster position="top-right" />
      <div className="mb-3">
        <Button variant="link" onClick={() => navigate('/tours')} className="back-button">
          <FaArrowLeft style={{ marginRight: 6 }} /> Quay l·∫°i danh s√°ch tour
        </Button>
      </div>
      <div className="tour-detail-header">
        <h1>{tour.title}</h1>
        <div className="tour-price-main" style={{ color: '#e53935', background: '#fffbe6' }}>
          <FaMoneyBillWave style={{ color: '#ffd600', marginRight: 6 }} />
          {new Intl.NumberFormat('vi-VN').format(tour.priceAdults)} ƒë
        </div>
      </div>
      <div className="detail-carousel">
        <Carousel>
          {tour.images && tour.images.length > 0 ? (
            tour.images.map((image, index) => (
                  <Carousel.Item key={image.id || index}>
                    <img
                      className="d-block w-100"
                      src={image.url}
                      alt={`H√¨nh ·∫£nh tour ${index + 1}`}
                      style={{ height: '400px', objectFit: 'cover' }}
                    />
                  </Carousel.Item>
            ))
          ) : (
            <Carousel.Item>
              <img
                className="d-block w-100"
                src="https://via.placeholder.com/800x400?text=Kh√¥ng+c√≥+h√¨nh+·∫£nh"
                alt={tour.title}
                style={{ height: '400px', objectFit: 'cover' }}
              />
            </Carousel.Item>
          )}
        </Carousel>
      </div>
      <div className="tour-info-quick">
        <div className="info-item"><FaCalendarAlt /> Kh·ªüi h√†nh: <span>{tour.startDate ? formatDate(tour.startDate) : 'N/A'}</span></div>
        <div className="info-item"><FaMapMarkerAlt /> ƒêi·ªÉm ƒë·∫øn: <span>{tour.destination || 'N/A'}</span></div>
        <div className="info-item"><FaTag /> M√£ tour: <span>{tour.code || tour.id}</span></div>
        <div className="info-item"><FaUsers /> S·ªë ch·ªó: <span>{tour.capacity ?? 'N/A'}</span></div>
        <div className="info-item"><FaMoneyBillWave /> Gi√° ng∆∞·ªùi l·ªõn: <span>{tour.priceAdults ? new Intl.NumberFormat('vi-VN').format(tour.priceAdults) + ' VNƒê' : 'N/A'}</span></div>
        <div className="info-item"><FaMoneyBillWave /> Gi√° tr·∫ª em: <span>{tour.priceChildren ? new Intl.NumberFormat('vi-VN').format(tour.priceChildren) + ' VNƒê' : 'N/A'}</span></div>
        <div className="info-item"><FaStar style={{ color: '#ffd600' }} /> ƒê√°nh gi√°: <span>{reviewStats?.averageRating ? reviewStats.averageRating.toFixed(1) : 'Ch∆∞a c√≥'} / 5</span></div>
        <div className="info-item"><FaTag /> Tr·∫°ng th√°i: <span>{tour.available ? 'Ho·∫°t ƒë·ªông' : 'Kh√¥ng ho·∫°t ƒë·ªông'}</span></div>
        <div className="info-item"><FaTag /> Th·ªÉ lo·∫°i: <span>{CATEGORY_LABELS[tour.category] || tour.category || 'N/A'}</span></div>
        <div className="info-item"><FaTag /> H√£ng bay: <span>{tour.airline || 'N/A'}</span></div>
      </div>
      <div className="tour-detail-actions">
        {tour.available ? (
          <Button className="booking-button" onClick={handleBookTour}>
            ƒê·∫∑t tour ngay
          </Button>
        ) : (
          <div style={{color: 'red', fontWeight: 600, marginBottom: 12}}>
            Tour n√†y hi·ªán kh√¥ng ho·∫°t ƒë·ªông, kh√¥ng th·ªÉ ƒë·∫∑t tour.
          </div>
        )}
        <Button className="export-pdf-button" onClick={handleDownloadPDF}>
          <FaFilePdf style={{ marginRight: 6 }} /> T·∫£i PDF
        </Button>
      </div>
      <div className="tour-section">
        <h2>Th√¥ng tin chi ti·∫øt</h2>
        <div className="tour-description">{tour.description}</div>
      </div>
      <div className="tour-section">
        <h2>L·ªãch tr√¨nh</h2>
        <div className="itinerary">{tour.itinerary}</div>
      </div>
      {/* Ch√≠nh s√°ch h·ªßy/ph·∫°t - ƒë·∫∑t ngay d∆∞·ªõi l·ªãch tr√¨nh, m√†u gi·ªëng l·ªãch tr√¨nh */}
      <div className="tour-section cancellation-policy" style={{marginTop: 0, background: '#fff', border: '1px solid #b6d6f6', borderRadius: 12, padding: 24, boxShadow: '0 2px 8px rgba(182,214,246,0.08)'}}>
        <h2 style={{color: '#0074bc', display: 'flex', alignItems: 'center', gap: 8}}>
          <span role="img" aria-label="pin">üìå</span> Ch√≠nh s√°ch h·ªßy / ph·∫°t
        </h2>
        <div style={{fontSize: 16, color: '#444', marginTop: 10, whiteSpace: 'pre-line'}}>
<b>L∆∞u √Ω v·ªÅ chuy·ªÉn ho·∫∑c h·ªßy tour</b>
<br/>
a) <b>ƒê·ªëi v·ªõi ng√†y th∆∞·ªùng:</b>
<ul style={{marginTop: 4}}>
  <li>H·ªßy v√© trong v√≤ng 24 gi·ªù ho·∫∑c ng√†y kh·ªüi h√†nh, ch·ªãu ph·∫°t 90% ti·ªÅn tour.</li>
  <li>H·ªßy v√© t·ª´ 2 ‚Äì 4 ng√†y tr∆∞·ªõc ng√†y kh·ªüi h√†nh, ch·ªãu ph·∫°t 50% ti·ªÅn tour.</li>
  <li>H·ªßy v√© t·ª´ 5 ‚Äì 7 ng√†y tr∆∞·ªõc ng√†y kh·ªüi h√†nh, ch·ªãu ph·∫°t 30% ti·ªÅn tour.</li>
  <li>H·ªßy v√© tr∆∞·ªõc 30 ng√†y, ch·ªãu ph·∫°t 10% ti·ªÅn tour.</li>
  <li>H·ªßy v√© tr∆∞·ªõc 30 ng√†y tr·ªü l√™n, kh√¥ng ph·∫°t.</li>
</ul>
<hr/>
b) <b>ƒê·ªëi v·ªõi d·ªãp L·ªÖ, T·∫øt:</b>
<ul style={{marginTop: 4}}>
  <li>Du kh√°ch chuy·ªÉn ƒë·ªïi tour sang ng√†y kh√°c v√† b√°o tr∆∞·ªõc ng√†y kh·ªüi h√†nh t·ª´ 15 ng√†y tr·ªü l√™n s·∫Ω kh√¥ng ch·ªãu ph√≠ (kh√¥ng √°p d·ª•ng c√°c tour kh√°ch s·∫°n 4‚Äì5 sao), n·∫øu tr·ªÖ h∆°n s·∫Ω cƒÉn c·ª© theo quy ƒë·ªãnh h·ªßy d∆∞·ªõi ƒë√¢y v√† ch·ªâ ƒë∆∞·ª£c chuy·ªÉn ng√†y kh·ªüi h√†nh tour 1 l·∫ßn.</li>
  <li>H·ªßy v√© trong v√≤ng 24 gi·ªù ho·∫∑c ng√†y kh·ªüi h√†nh, ch·ªãu ph·∫°t 100% ti·ªÅn tour.</li>
  <li>H·ªßy v√© t·ª´ 2 ‚Äì 7 ng√†y tr∆∞·ªõc ng√†y kh·ªüi h√†nh, ch·ªãu ph·∫°t 80% ti·ªÅn tour.</li>
  <li>H·ªßy v√© t·ª´ 8 ‚Äì 15 ng√†y tr∆∞·ªõc ng√†y kh·ªüi h√†nh, ch·ªãu ph·∫°t 50% ti·ªÅn tour.</li>
  <li>H·ªßy v√© tr∆∞·ªõc 30 ng√†y, ch·ªãu ph·∫°t 20% ti·ªÅn tour.</li>
  <li>H·ªßy v√© tr∆∞·ªõc 30 ng√†y tr·ªü l√™n, kh√¥ng ph·∫°t.</li>
</ul>
c) Sau khi h·ªßy tour, du kh√°ch vui l√≤ng ƒë·∫øn nh·∫≠n ti·ªÅn trong v√≤ng 15 ng√†y k·ªÉ t·ª´ ng√†y k·∫øt th√∫c tour. Ch√∫ng t√¥i ch·ªâ thanh to√°n trong kho·∫£ng th·ªùi gian n√≥i tr√™n.<br/>
d) Tr∆∞·ªùng h·ª£p h·ªßy tour do s·ª± c·ªë kh√°ch quan nh∆∞ thi√™n tai, l≈© l·ª•t, d·ªãch b·ªánh, t√†u th·ªßy, xe l·ª≠a, m√°y bay ho√£n/h·ªßy chuy·∫øn...<br/>
L·ªØ h√†nh s·∫Ω kh√¥ng ch·ªãu tr√°ch nhi·ªám b·ªìi th∆∞·ªùng chi ph√≠ n√†o kh√°c ngo√†i vi·ªác ho√†n tr·∫£ chi ph√≠ d·ªãch v·ª• ch∆∞a s·ª≠ d·ª•ng c·ªßa tour ƒë√≥.
        </div>
      </div>
      {/* Review section */}
      <div className="tour-section">
        <h2>ƒê√°nh gi√° tour</h2>
                {reviewLoading ? (
                  <div>ƒêang t·∫£i ƒë√°nh gi√°...</div>
        ) : reviewStats && reviewStats.reviews && reviewStats.reviews.length > 0 ? (
          <div>
            {reviewStats.reviews.map((review, idx) => (
              <div key={idx} style={{ marginBottom: 12, borderBottom: '1px solid #eee', paddingBottom: 8 }}>
                <div style={{ fontWeight: 600 }}>
  {review.userName || review.user?.fullName || review.user?.name || review.username || '·∫®n danh'}
  <span style={{ color: '#ffd600', marginLeft: 8 }}><FaStar /> {review.rating}/5</span>
</div>
                <div style={{ color: '#555', fontSize: 15 }}>{review.comment}</div>
                    </div>
            ))}
                          </div>
                      ) : (
                        <div>Ch∆∞a c√≥ ƒë√°nh gi√° n√†o cho tour n√†y.</div>
                      )}
                    </div>
      {/* Related tours */}
      <div className="tour-section related-tours">
        <h4>C√°c tour li√™n quan</h4>
        <div className="related-tours-list">
              {loadingRelated ? (
            <div>ƒêang t·∫£i...</div>
          ) : relatedTours && relatedTours.length > 0 ? (
            relatedTours.map((rtour, idx) => (
              <div className="related-tour-card" key={rtour.id} onClick={() => navigateToTourDetail(rtour.id)}>
                <img className="related-tour-img" src={rtour.images && rtour.images[0] ? rtour.images[0].url : 'https://via.placeholder.com/200x120?text=No+Image'} alt={rtour.title} />
                <div className="related-tour-info">
                  <div className="related-tour-title">{rtour.title}</div>
                  <div className="price"><FaMoneyBillWave /> {new Intl.NumberFormat('vi-VN').format(rtour.priceAdults)} ƒë</div>
                  <span className="related-tour-detail-link">Xem chi ti·∫øt &rarr;</span>
                </div>
                      </div>
            ))
          ) : (
            <div>Kh√¥ng c√≥ tour li√™n quan.</div>
          )}
                        </div>
                </div>
    </Container>
  );
};

export default TourDetail; 